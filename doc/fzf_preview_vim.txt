*fzf-preview-vim.txt*

Author:  yuki-yano
License: MIT
Version: 0.1


==============================================================================
CONTENTS                                   *fzf-preview-contents*
    Introduction                           |fzf-preview-introduction|
    Installation                           |fzf-preview-installation|
    Mappings                               |fzf-preview-mappings|
    Commands                               |fzf-preview-commands|
    Keymap                                 |fzf-preview-keymap|

==============================================================================
INTRODUCTION                              *fzf-preview-introduction*

*fzf-preview* is a Neovim plugin to provide some fzf sources to with preview.
You can see the preview of the file on a small or full window.

Requirements:
- neovim
    https://neovim.io/
- git
    https://git-scm.com/
- fzf
    https://github.com/junegunn/fzf

Optional
- ccat (Colorizing cat)
    https://github.com/jingweno/ccat
    When ccat is installed you can highlight the preview and see it.
    If it is not installed, head will be used

- file-line (Enable opening a file in a given line)
    https://github.com/bogado/file-line
    It is also necessary to use the ProjectGrepPreview command.

- ripgrep
    https://github.com/BurntSushi/ripgrep
    If ripgrep is installed, it will be possible to obtain a faster file list.
    It is also necessary to use the ProjectGrepPreview command.

- neomru.vim
    https://github.com/Shougo/neomru.vim
    neomru is a plugin that manages the history of files.
    It does not depend on viminfo. It may be more convenient than oldfiles.

Latest version:
https://github.com/yuki-ycino/fzf-preview.vim

==============================================================================
INSTRATTION                                     *fzf-preview-installation*

Use Dein, vim-plug or any Vim plugin manager of your choice.

If you are using MacOS and installed fzf using Homebrew
suffice:
>
    set  runtimepath+=/usr/local/opt/fzf
    call dein#add('yuki-ycino/fzf-preview.vim')
<

you install fzf as well using Dein

>
    call dein#add('junegunn/fzf', { 'build': './install --all', 'merged': 0 })
    call dein#add('yuki-ycino/fzf-preview.vim')
<

==============================================================================
COMMANDS                                        *fzf-preview-commands*

                                                *:ProjectFilesPreview*
:ProjectFilesPreview
     Select and open git repository files with fzf interface
     while watching preview.

                                                *:GitFilesPreview*
:GitFilesPreview
     Select files that have been changed with git.
     Use fzf interface while watching git diff preview.

                                                *:BuffersPreview*
:BuffersPreview
     Select and open opened buffers with fzf interface while watching preview.

                                                *:ProjectOldFilesPreview*
:ProjectOldFilesPreview
     Select and open the past open files in the project using fzf.
     The target file is selected from  |v:oldfiles|.

                                                *:ProjectMruFilesPreview*
:ProjectMruFilesPreview
     Select and open the past open files in the project using fzf.
     The target file is selected from  |neomru|.

                                                *:ProjectGrepPreview*
:ProjectGrepPreview {dir or none}
    Search text in the args dir from the project.
    The retrieved result is displayed in file name, number of lines, preview
    and can be opened with fzf interface.

                                                *:OldFilesPreview*
:OldFilesPreview
     Select and open the opened file with the fzf interface
     while watching the preview.
     For the target file, see |v:oldfiles|.

                                                *:MruFilesPreview*
:MruFilesPreview
     Select and open the opened file with the fzf interface
     while watching the preview.
     For the target file, see |neomru|.

==============================================================================
OPTIONS                                         *fzf-preview-options*

g:fzf_preview_quit_map
    If this value is 1, mapping that will safely quit
    in fzf's normal mode and visual mode is added

    Default value is 1

g:fzf_preview_layout
    This value is the layout displayed when executing the fzf command.

    Default value is 'top split new'


g:fzf_preview_rate
    Calculate the size of the fzf window based on this value.
    In the case of 0.3, windows with 0.3 times the size of
    &lines are generated.

    Default value is 0.3


g:fzf_full_preview_toggle_key
    It is a mapping for switching the fzf window to full screen.
    You press this key, the display changes with the value set
    with g:fzf_preview_rate.

    Default value is '<C-s>'


g:fzf_preview_command
    Shell command used for fzf preview. The head command is used by default.
    If the ccat command is installed, the ccat command is used by default and
    the preview is syntax highlighted.

    Not installed ccat:
        Default value is 'head -100 {-1}'

    Installed ccat:
        Default value is 'ccat --color=always {-1}'


g:fzf_binary_preview_command
    Shell command used for binary file preview.
    Since it is heavy to display in text, if there is no particular reason,
    echo etc. substitute.

    Default value is 'echo "{} is a binary file"'


g:fzf_preview_filelist_command
    This is the command used to search for files in the project.
    If ripgrep is not included, git ls-files will be used.

    Installed ripgrep:
        Default value is 'rg --files --hidden --follow --glob "!.git/*"'

    Not installed ripgrep:
        Default value is 'git ls-files --exclude-standard'


g:fzf_preview_gitfiles_command
    This is the command used to git status files

    Default value is "git status --short --untracked-files=all | awk '{if (substr($0,2,1) !~ / /) print $2}'"

g:fzf_preview_grep_cmd
    This command is used for project grep.
    Recommend using a fast grep command such as ripgrep or ag.
    Interactively grep the specified directory.

    Installed ripgrep:
        Default value is 'rg --line-number --no-heading'

    Not installed ripgrep:
        :ProjectGrepPreview is disabled.


g:fzf_preview_grep_preview_cmd
    This command is used for :ProjectGrepPreview. bin/preview.rb is used by
    default. The format of the grep result is "{file}:{line_number}:{text}".
    You can pass another command that post-process the result

    Default value is 'expand("<sfile>:h:h") . "/bin/preview.rb"'


==============================================================================
KEYMAP                                          *fzf-preview-keymap*

It is currently impossible to change, but we plan to
make it changeable in the future.

<C-s>
  - Toggle window size of fzf, normal size and full-screen

<C-d>
  - Preview page down

<C-u>
  - Preview page up

<C-t> or ?
  - Toggle Preview


==============================================================================
EXAMPLE                                         *fzf-preview-mappings*

Here is mapping example.
>
    nnoremap <silent> <Leader>p :<C-u>ProjectFilesPreview<CR>
    nnoremap <silent> <Leader>b :<C-u>BuffersPreview<CR>
    nnoremap <silent> <Leader>m :<C-u>ProjectOldFilesPreview<CR>
    nnoremap <silent> <Leader>M :<C-u>OldFilesPreview<CR>
<
vim:tw=78:sw=2:ts=2:ft=help:norl:nowrap:
